{"version":3,"sources":["firebase.js","components/login.js","components/pages/ProfilePage.js","components/pages/list.js","components/pages/Project.js","components/pages/Dashboard.js","components/pages/All.js","components/route.js","components/slidenav.js","components/dash.js","App.js","serviceWorker.js","index.js","assets/mdb-react.png","logo.svg"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","FormPage","useEffect","className","md","label","group","type","validate","id","containerClass","onClick","email","document","getElementById","value","auth","sendPasswordResetEmail","then","u","alert","catch","err","message","href","password","signInWithEmailAndPassword","console","log","color","rounded","createUserWithEmailAndPassword","ProfilePage","props","List","useState","d_id","updateids","d_data","updatedata","key","files","firestore","collection","doc","pid","onSnapshot","querySnapshot","forEach","push","data","length","map","object","i","Accordion","defaultActiveKey","style","marginLeft","Card","Header","Name","Body","textAlign","File","Line","Priority","Code","Footer","Button","variant","num","delete","error","Project","width","Title","Text","material","containerClassName","hint","outline","pname","line","file","code","priority","db","settings","timestampsInSnapshots","add","fun","Dashbord","setpid","fullname","path","slice","icon","placeholder","aria-label","get","All","Routes","component","React","Component","TopNavigation","infinite","alt","src","logo","to","activeClassName","NavbarPage","state","isOpen","toggleCollapse","setState","dark","expand","this","navbar","left","active","nav","caret","right","fab","App","user","updateuser","onAuthStateChanged","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.5ef7fbcd.chunk.js","sourcesContent":["import firebase from 'firebase';\r\nimport 'firebase/firestore'\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n \r\nconst firebaseConfigs = {\r\n   /* apiKey: process.env.REACT_APP_FIREBASE_KEY,\r\n    authDomain: process.env.REACT_APP_FIREBASE_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_FIREBASE_DATABASE,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_FIREBASE_SENDER_ID,\r\n    appId: \"1:994880379089:web:bd24da8d676a1fd0758df0\",\r\n    measurementId: \"G-KM2ZDTEXZ7\"\r\n    */\r\n    apiKey: \"AIzaSyDrK6rf-5LAeU6SS0Qja2Vr2zSMhjTA4Zg\",\r\n    authDomain: \"bug-tracker-b9b69.firebaseapp.com\",\r\n    databaseURL: \"https://bug-tracker-b9b69.firebaseio.com\",\r\n    projectId: \"bug-tracker-b9b69\",\r\n    storageBucket: \"bug-tracker-b9b69.appspot.com\",\r\n    messagingSenderId: \"994880379089\",\r\n    appId: \"1:994880379089:web:bd24da8d676a1fd0758df0\",\r\n    measurementId: \"G-KM2ZDTEXZ7\"\r\n  };\r\n  \r\n  firebase.initializeApp(firebaseConfigs);\r\n  \r\n\r\n  export {firebase}","import React, {components, useEffect,useState} from \"react\";\r\nimport { MDBContainer, MDBRow, MDBCol, MDBCard, MDBCardBody, MDBInput, MDBBtn, MDBIcon } from 'mdbreact';\r\nimport {firebase} from '../firebase'\r\n\r\nconst FormPage = () => {\r\n\r\n  useEffect(() => {\r\n      //firebase.auth().signOut().then(() => {/*console.log('Signed Out');*/}).catch(e=>{console.error('Sign Out Error', e);});\r\n  }, [])\r\n\r\n  const authlogin = () => {\r\n    var email = document.getElementById(\"loginemail\").value;\r\n    var password = document.getElementById(\"loginpassword\").value;\r\n    firebase.auth().signInWithEmailAndPassword(email, password).then((u) => {console.log(u);}).catch((err) => {alert(err.message);});\r\n    \r\n    \r\n    }\r\n\r\n    const authsignup = () => {\r\n\r\n      var email = document.getElementById(\"loginemail\").value;\r\n      var password = document.getElementById(\"loginpassword\").value;\r\n      firebase.auth().createUserWithEmailAndPassword(email, password).then((u) => { firebase.auth().signInWithEmailAndPassword(email, password).then((u) => {/*console.log(u);*/}).catch((err) => {alert(err.message);});}).catch((err) => {alert(err.message);});\r\n\r\n    }\r\n    const authforgot = () => {\r\n\r\n      var email = document.getElementById(\"loginemail\").value;\r\n      firebase.auth().sendPasswordResetEmail(email).then((u) => {alert(\"Email sent\")}).catch((err) => {alert(err.message);});\r\n\r\n    }\r\n\r\n\r\n  return (<center>\r\n    <MDBContainer className=\"mx-auto\">\r\n      <MDBRow>\r\n        <MDBCol md=\"6\">\r\n          <MDBCard>\r\n            <div className=\"header pt-3 peach-gradient\">\r\n              <MDBRow className=\"d-flex justify-content-center\">\r\n                <h3 className=\"white-text mb-3 pt-3 font-weight-bold\">\r\n                  Log in\r\n                </h3>\r\n              </MDBRow>\r\n              \r\n            </div>\r\n            <MDBCardBody className=\"mx-4 mt-4\">\r\n              <MDBInput label=\"Your email\" group type=\"text\" validate id=\"loginemail\" />\r\n              <MDBInput\r\n                label=\"Your password\"\r\n                group\r\n                type=\"password\"\r\n                validate\r\n                id=\"loginpassword\"\r\n                containerClass=\"mb-0\"\r\n              />\r\n              <p className=\"font-small grey-text d-flex justify-content-end\">\r\n                Forgot\r\n                <a\r\n                  onClick={authforgot}\r\n                  href=\"#!\"\r\n                  className=\"dark-grey-text ml-1 font-weight-bold\"\r\n                >\r\n                  Password?\r\n                </a>\r\n              </p>\r\n              <MDBRow className=\"d-flex align-items-center mb-4 mt-5\">\r\n                <MDBCol md=\"5\" className=\"d-flex align-items-start\">\r\n                  <div className=\"text-center\">\r\n                    <MDBBtn\r\n                      onClick={authlogin}\r\n                      color=\"grey\"\r\n                      rounded\r\n                      type=\"button\"\r\n                      className=\"z-depth-1a\"\r\n                    >\r\n                      Log in\r\n                    </MDBBtn>\r\n                  </div>\r\n                </MDBCol>\r\n                <MDBCol md=\"7\" className=\"d-flex justify-content-end\">\r\n                  <p className=\"font-small grey-text mt-3\">\r\n                    Don't have an account?\r\n                    <a\r\n                      onClick={authsignup}\r\n                      href=\"#!\"\r\n                      className=\"dark-grey-text ml-1 font-weight-bold\"\r\n                    >\r\n                      Sign up\r\n                    </a>\r\n                  </p>\r\n                </MDBCol>\r\n              </MDBRow>\r\n            </MDBCardBody>\r\n          </MDBCard>\r\n        </MDBCol>\r\n      </MDBRow>\r\n    </MDBContainer></center>\r\n  );\r\n};\r\n\r\nexport default FormPage;","import React from 'react';\r\n\r\nconst ProfilePage = props => {\r\n    return (\r\n        <div>\r\n            Profile\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfilePage;","import React, { Fragment,useState,useEffect} from \"react\";\r\nimport { MDBBtn,MDBCol, MDBFormInline, MDBIcon,MDBInput} from \"mdbreact\";\r\nimport {firebase} from '../../firebase'\r\nimport { MDBContainer, MDBAlert } from 'mdbreact';\r\nimport Card from 'react-bootstrap/Card'\r\nimport Accordion from 'react-bootstrap/Accordion'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nconst List = props => {\r\n   \r\n\r\n    \r\n\r\n    const [d_id , updateids] = useState([]);\r\n    const [d_data , updatedata] = useState([]);\r\n    const key =[];\r\n    const files=[];\r\n    const remove = (num) => {\r\n\r\n        firebase.firestore().collection(\"Projects\").doc(props.pid).collection(\"List\").doc(d_id[num]).delete().then(function() {\r\n            alert(\"deleted\")\r\n        }).catch(function(error) {\r\n            alert(\"Error removing document: \", error);\r\n        });\r\n\r\n    }\r\n\r\n    \r\n   firebase.firestore().collection(\"Projects\").doc(props.pid).collection(\"List\").onSnapshot((querySnapshot) => {\r\n        querySnapshot.forEach((doc) => {\r\n            \r\n            key.push(doc.id);\r\n            files.push(doc.data());\r\n        });\r\n      \r\n        if(d_id.length != key.length){updateids(key); updatedata(files);}\r\n    });\r\n\r\n    console.log(d_id);\r\n    console.log(d_data);\r\n\r\n      \r\n    return (\r\n    <div id=\"list\">\r\n\r\n       \r\n\r\n        <br></br>\r\n        \r\n    {d_data.map((object, i) => \r\n    \r\n    /////////////////////\r\n    <div>\r\n   \r\n  <Accordion defaultActiveKey=\"0\" style={{marginLeft : 330}}>\r\n    <Card>\r\n    <Card.Header>{object.Name}</Card.Header>\r\n   <Card.Body  style={{textAlign : 'left'}}>\r\n    File Name : {object.File}<br></br>\r\n    Line no : {object.Line}<br></br>\r\n    Priority : {object.Priority}<br></br>\r\n    Code Snippet : <br></br>{object.Code}\r\n           \r\n    </Card.Body>\r\n    <Card.Footer className=\"text-muted\"><Button variant=\"danger\" onClick={()=>remove(i)}>Remove BUG</Button></Card.Footer>\r\n    </Card><br></br>\r\n  </Accordion>\r\n\r\n  </div>\r\n  \r\n    //////////////\r\n    \r\n    )}\r\n   \r\n        \r\n        \r\n       \r\n    </div>\r\n    );\r\n}\r\n\r\nexport default List;","import React from 'react';\r\nimport Card from 'react-bootstrap/Card'\r\nimport Button from 'react-bootstrap/Button'\r\nimport {firebase} from '../../firebase'\r\nimport { MDBBadge, MDBContainer } from \"mdbreact\";\r\nimport { MDBBtn } from \"mdbreact\";\r\nimport { MDBInputGroup } from \"mdbreact\";\r\nimport List from './list';\r\n\r\n\r\n\r\nconst Project= props => {\r\n\r\n    const add = () => {\r\n        var pname = document.getElementById(\"pname\").value;\r\n        var line = document.getElementById(\"line\").value;\r\n        var file = document.getElementById(\"file\").value;\r\n        var code = document.getElementById(\"code\").value;\r\n        var priority = document.getElementById(\"priority\").value;\r\n        const db = firebase.firestore();\r\n        db.settings({\r\n        timestampsInSnapshots: true\r\n                    });\r\n        db.collection(\"Projects\")\r\n        .doc(props.pid).collection(\"List\").add({\r\n            Name : pname, Line : line , File : file , Code : code, Priority : priority\r\n        }).then(doc => {alert(\"Bug added\")}).catch((err) => {alert(err.message);});\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            \r\n            <Card className=\"text-center\" style={{marginLeft : 330 , width : \"1000px\"}}>\r\n            <Card.Body>\r\n            <Card.Title>Project ID : <MDBBadge color=\"light\">{props.pid} </MDBBadge></Card.Title>\r\n            <Card.Text>\r\n                <MDBContainer>\r\n                <MDBInputGroup material containerClassName=\"mb-3 mt-0\"  hint=\"Bug Title\" id=\"pname\"/>\r\n                <MDBInputGroup material containerClassName=\"mb-3 mt-0\"  hint=\"Bug at Line\" id=\"line\"/>\r\n                <MDBInputGroup material containerClassName=\"mb-3 mt-0\"  hint=\"File Name\" id=\"file\"/>\r\n                <MDBInputGroup\r\n                        material\r\n                        className=\"mb-0\"\r\n                        hint=\"Code Snippet\"\r\n                        type=\"textarea\" id=\"code\"/>\r\n                 <MDBInputGroup material containerClassName=\"mb-3 mt-0\"  hint=\"Priority\" id=\"priority\"/>\r\n                       \r\n                </MDBContainer>\r\n            </Card.Text>\r\n            <MDBBtn rounded outline color=\"success\" onClick={add}>Add Bug</MDBBtn>\r\n               \r\n            </Card.Body>\r\n            <Card.Footer className=\"text-muted\"> <Button variant=\"warning\" onClick ={() => props.fun()}>Exit Project</Button><Button variant=\"danger\">Delete Project</Button></Card.Footer>\r\n            </Card>\r\n            <br></br><br></br>\r\n            <List pid={props.pid}/>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Project;","import React, { Fragment,useState} from \"react\";\r\nimport { MDBBtn,MDBCol, MDBFormInline, MDBIcon,MDBInput,MDBContainer   } from \"mdbreact\";\r\nimport {firebase} from '../../firebase'\r\nimport Project from './Project'\r\n\r\n\r\nconst Dashbord = props => {\r\n\r\n  const [pid , setpid] = useState(false);\r\n\r\n    const pidfalse = () => {setpid(false);}\r\n    const create = () => {\r\n        const db = firebase.firestore();\r\n        db.settings({\r\n        timestampsInSnapshots: true\r\n                    });\r\n        const userRef = db.collection(\"Projects\").add({\r\n        fullname: \"hello\",\r\n        email: 10\r\n        }).then((u) => {\r\n          \r\n          console.log(u.path.slice(9));\r\n          setpid(u.path.slice(9));\r\n          const db = firebase.firestore();\r\n          db.collection(\"Projects\")\r\n        .doc(u.path.slice(9)).collection(\"List\").add({\r\n          fullname: \"hello\",\r\n          email: 10\r\n          });\r\n        \r\n        \r\n        }).catch((err) => {alert(err.message);});\r\n\r\n       \r\n    }\r\n\r\n    const open = () => {\r\n        var code = document.getElementById(\"opencode\").value;\r\n        const db = firebase.firestore();\r\n        db.settings({\r\n        timestampsInSnapshots: true\r\n                    });\r\n       /* db.collection(\"Projects\")\r\n        .get()\r\n        .then(querySnapshot => {\r\n        const data = querySnapshot.docs.map(doc => doc.data());;\r\n        console.log(data); \r\n        });\r\n        */\r\n\r\n\r\n        db.collection(\"Projects\")\r\n        .doc(code)\r\n        .get()\r\n        .then(doc => {\r\n            const data = doc.data();\r\n            console.log(data);\r\n            \r\n            if(data)\r\n            setpid(code);\r\n            else\r\n              alert(\"Project with this ID doesnt exist\")\r\n        }).catch((err) => {alert(err.message);});\r\n        \r\n    }\r\n\r\n    return (\r\n        <div>{ !pid ? (\r\n        <Fragment >\r\n        <br></br><br></br>\r\n        <MDBBtn rounded outline onClick={create}>Create New Project</MDBBtn>\r\n       <br></br>\r\n       <MDBCol md=\"6\">\r\n                  <MDBFormInline className=\"md-form\" style={{marginLeft : 540}}>\r\n                    <MDBIcon icon=\"search\" />\r\n                    <input id=\"opencode\" className=\"form-control form-control-ml ml-5 w-85 \" type=\"text\" placeholder=\"Input Project Code\" aria-label=\"Search\" />\r\n                  </MDBFormInline>\r\n                </MDBCol>\r\n        <MDBBtn rounded outline color=\"info\" onClick={open}>Open</MDBBtn>\r\n        </Fragment>) : (<Project pid={pid} fun = {pidfalse}/>)}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dashbord;","import React from 'react';\r\n\r\nconst All= props => {\r\n    return (\r\n        <div>\r\n            all\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default All;","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport ProfilePage from './pages/ProfilePage';\r\nimport Dashbord from './pages/Dashboard';\r\nimport All from './pages/All';\r\n\r\n\r\nclass Routes extends React.Component {\r\n  render() {\r\n    return (\r\n      <Switch>\r\n        \r\n        <Route path='/dashbord' component={Dashbord} />\r\n        \r\n        <Route path='/profile' component={ProfilePage} />\r\n      \r\n        <Route path='/all' component={All} />\r\n        \r\n      </Switch>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Routes;\r\n","import React from 'react';\r\nimport logo from \"../assets/mdb-react.png\";\r\nimport { MDBListGroup, MDBListGroupItem, MDBIcon,MDBAnimation} from 'mdbreact';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Routes from './route';\r\n\r\nconst TopNavigation = () => {\r\n    return (<div>\r\n        <div className=\"sidebar-fixed position-fixed\">\r\n            <a href=\"#!\" className=\"logo-wrapper waves-effect\">\r\n            <MDBAnimation type=\"bounce\" infinite>\r\n                <img alt=\"MDB React Logo\" className=\"img-fluid\"  src={logo}/></MDBAnimation>\r\n            </a>\r\n            <MDBListGroup className=\"list-group-flush\">\r\n               \r\n                <NavLink to=\"/dashbord\" activeClassName=\"activeClass\">\r\n                    <MDBListGroupItem>\r\n                        <MDBIcon icon=\"chart-pie\" className=\"mr-3\"/>\r\n                        Dashboard\r\n                    </MDBListGroupItem>\r\n                </NavLink>\r\n                <NavLink to=\"/profile\" activeClassName=\"activeClass\">\r\n                    <MDBListGroupItem>\r\n                        <MDBIcon icon=\"user\" className=\"mr-3\"/>\r\n                        Profile\r\n                    </MDBListGroupItem>\r\n                </NavLink>\r\n                \r\n                <NavLink to=\"/all\" activeClassName=\"activeClass\">\r\n                    <MDBListGroupItem>\r\n                        <MDBIcon icon=\"map\" className=\"mr-3\"/>\r\n                        My Projects\r\n                    </MDBListGroupItem>\r\n                </NavLink>\r\n               \r\n            </MDBListGroup>\r\n        </div><Routes/></div>\r\n    );\r\n}\r\n\r\nexport default TopNavigation;","import React, { Component } from \"react\";\r\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavItem, MDBNavLink, MDBNavbarToggler, MDBCollapse, MDBDropdown,\r\nMDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem, MDBIcon } from \"mdbreact\";\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport Slidenav from './slidenav';\r\n\r\nclass NavbarPage extends Component {\r\nstate = {\r\n  isOpen: false\r\n};\r\n\r\ntoggleCollapse = () => {\r\n  this.setState({ isOpen: !this.state.isOpen });\r\n}\r\n\r\nrender() {\r\n  return (\r\n    <Router>\r\n      <MDBNavbar color=\"default-color\" dark expand=\"md\">\r\n        <MDBNavbarBrand>\r\n          <strong className=\"white-text\">Navbar</strong>\r\n        </MDBNavbarBrand>\r\n        <MDBNavbarToggler onClick={this.toggleCollapse} />\r\n        <MDBCollapse id=\"navbarCollapse3\" isOpen={this.state.isOpen} navbar>\r\n          <MDBNavbarNav left>\r\n            <MDBNavItem active>\r\n              <MDBNavLink to=\"#!\">Home</MDBNavLink>\r\n            </MDBNavItem>\r\n            <MDBNavItem>\r\n              <MDBNavLink to=\"#!\">Features</MDBNavLink>\r\n            </MDBNavItem>\r\n            <MDBNavItem>\r\n              <MDBNavLink to=\"#!\">Pricing</MDBNavLink>\r\n            </MDBNavItem>\r\n            <MDBNavItem>\r\n              <MDBDropdown>\r\n                <MDBDropdownToggle nav caret>\r\n                  <div className=\"d-none d-md-inline\">Dropdown</div>\r\n                </MDBDropdownToggle>\r\n                <MDBDropdownMenu className=\"dropdown-default\">\r\n                  <MDBDropdownItem href=\"#!\">Action</MDBDropdownItem>\r\n                  <MDBDropdownItem href=\"#!\">Another Action</MDBDropdownItem>\r\n                  <MDBDropdownItem href=\"#!\">Something else here</MDBDropdownItem>\r\n                  <MDBDropdownItem href=\"#!\">Something else here</MDBDropdownItem>\r\n                </MDBDropdownMenu>\r\n              </MDBDropdown>\r\n            </MDBNavItem>\r\n          </MDBNavbarNav>\r\n          <MDBNavbarNav right>\r\n            \r\n            <MDBNavItem>\r\n              <MDBDropdown>\r\n                <MDBDropdownToggle nav caret>\r\n                  <MDBIcon icon=\"user\" />\r\n                </MDBDropdownToggle>\r\n                <MDBDropdownMenu className=\"dropdown-default\">\r\n                  <MDBDropdownItem href=\"#!\">Action</MDBDropdownItem>\r\n                  <MDBDropdownItem href=\"#!\">Another Action</MDBDropdownItem>\r\n                  <MDBDropdownItem href=\"#!\">Something else here</MDBDropdownItem>\r\n                  <MDBDropdownItem href=\"#!\">Something else here</MDBDropdownItem>\r\n                </MDBDropdownMenu>\r\n              </MDBDropdown>\r\n            </MDBNavItem>\r\n            <MDBNavItem>\r\n              <MDBNavLink className=\"waves-effect waves-light\" to=\"#!\">\r\n                <MDBIcon fab icon=\"twitter\" />\r\n              </MDBNavLink>\r\n            </MDBNavItem>\r\n            <MDBNavItem>\r\n              <MDBNavLink className=\"waves-effect waves-light\" to=\"#!\">\r\n                <MDBIcon fab icon=\"google-plus-g\" />\r\n              </MDBNavLink>\r\n            </MDBNavItem>\r\n          </MDBNavbarNav>\r\n        </MDBCollapse>\r\n      </MDBNavbar>\r\n      <Slidenav/>\r\n    </Router>\r\n    \r\n    );\r\n  }\r\n}\r\n\r\nexport default NavbarPage;","import React, {components, useEffect,useState} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Login from \"./components/login\"\nimport Dash from \"./components/dash\"\nimport {firebase} from './firebase'\n\n\n\n\nfunction App() {\n\n  const [user , updateuser] = useState(false);\n\n  useEffect(() => {\n      firebase.auth().onAuthStateChanged((user) => {\n      if (user) {\n        updateuser(true);\n        \n      } else {\n        updateuser(false);\n      }\n    });\n\n\n  }, [])\n \n  \n  return (\n    <div className=\"App\">\n      \n      { user ? (<Dash/>) : (<Login/>)}\n    \n      \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"mdbreact/dist/css/mdb.css\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\n\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/mdb-react.6e0f56ab.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}